{"version":3,"sources":["components/PersonalData/PersonalData.jsx","components/Profile/ProfileStatus.jsx","components/Profile/Profile.jsx","redux/profile-reducer.js","components/Profile/ProfileContainer.jsx","components/MenuBlock/MenuBlock.jsx","components/Headers/HeadersUsers.jsx","components/Chats/FloodChat/AddMessagesChat/AddMessgaeChat.jsx","components/Chats/Messages.jsx","components/Chats/FloodChat/InputFloodChat.jsx","redux/floodChat-reduser.js","components/Chats/FloodChat/FloodChatContainer.jsx","components/Chats/WorkingChat/AddMessageChateTwo/AddMessageChateTwo.jsx","components/Chats/WorkingChat/InputWorkingChat.jsx","redux/workingChat-reducer.js","components/Chats/WorkingChat/WorkingChatContainer.jsx","components/Users/UsersItem.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","serviceWorker.js","redux/users-redusers.js","redux/redux-store.js","index.js","components/PersonalData/PersonalData.module.css","components/Chats/FloodChat/InputFloodChat.module.css","components/Chats/WorkingChat/InputWorkingChat.module.css","components/Profile/ProfileStatus.module.css","components/Chats/FloodChat/AddMessagesChat/AddMessgaeChat.module.css","components/Chats/WorkingChat/AddMessageChateTwo/AddMessageChateTwo.module.css","components/Users/Users.module.css","components/MenuBlock/MenuBlock.module.css","assets/images/user.jpg","components/Profile/Profile.module.css","components/Headers/HeadersUsers.module.css","components/Users/UsersItem.module.css"],"names":["PersonalData","props","className","style","blockInfoUser","markName","name","surname","position","href","email","telephon","ProfileStatus","state","editMode","statusText","activateEditMode","setState","deactivateEditMode","updateStatusText","onStatusTextChange","e","currentTarget","value","statusBlock","statusDesign","this","status","statusInputDown","onClick","statusInput","onChange","autoFocus","onBlur","maxlength","React","Component","Profile","profileData","profileElements","personalData","map","d","key","id","statusShow","src","userPhoto","avatat","alt","initialState","profileReducer","action","type","ProfileContainer","connect","dispatch","setStatusText","MenuBlock","menuBlock","HeadersUsers","headersLineUsers","reduxForm","form","inputMessage","onSubmit","handleSubmit","Field","component","inputText","buttonInput","Messages","message","MessageFloodChat","floodChatData","windowMessagesElements","windowMessage","m","inputBlock","showMessage","messageElements","myMessageMarker","workingChat","messageElementsTwo","messageElementsThree","values","deleteMessage","newTextMessage","addMessage","updateInput","floodChatReducer","newMessage","filter","FloodChatContainer","floodChatCreator","deleteMessageCreator","updateInputCreator","InputFloodChat","InputWorkingChat","workingChatData","newTextMessageTwo","workingChatReducer","WorkingChatContainer","workingChatCreator","UsersItem","nameDessign","Users","usersElements","usersData","users","u","usersBlock","userFont","App","UsersContainer","Boolean","window","location","hostname","match","usersRedusers","futureObject","futureAction","reducers","combineReducers","formReducer","store","createStore","renderEntireTree","ReactDOM","render","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.2ee1a5a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './PersonalData.module.css'\r\n\r\nconst PersonalData = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={style.blockInfoUser} >\r\n                <div>\r\n                    <span className={style.markName}>User-name: </span>\r\n                    <span> {props.name} </span>\r\n                    <span> {props.surname} </span>\r\n                </div>\r\n                <div>\r\n                    <span className={style.markName}>Position: </span><span>{props.position}</span>\r\n                </div>\r\n                <div>\r\n                    <span className={style.markName}>email: </span><a href=\"mailto: loonyp2010@gmail.com\"> {props.email} </a>\r\n                </div>\r\n                <div>\r\n                    <span className={style.markName}>telephon: </span><a href=\"tel: +79193639610\"> {props.telephon} </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalData;","import React from 'react';\r\nimport style from './ProfileStatus.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        statusText: this.props.statusText\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatusText(this.state.statusText);\r\n    }\r\n\r\n    onStatusTextChange = (e) => {\r\n        this.setState({\r\n            statusText: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.statusBlock}>\r\n                <div className={style.statusDesign}>\r\n                    {this.props.status}\r\n\r\n                    {!this.state.editMode &&\r\n                        <div className={style.statusInputDown}>\r\n                            <span onClick={this.activateEditMode}>{this.props.statusText}</span>\r\n                        </div>}\r\n                    {this.state.editMode &&\r\n                        <div className={style.statusInput}>\r\n                            <input onChange={this.onStatusTextChange} autoFocus={true} onBlur={this.deactivateEditMode} \r\n                            value={this.state.statusText} maxlength=\"20\" />\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport PersonalData from '../PersonalData/PersonalData';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from '../../assets/images/user.jpg'\r\nimport style from './Profile.module.css'\r\n\r\nconst Profile = (props) => {\r\n\r\n    let state = props.profileData;\r\n\r\n    let profileElements = state.personalData.map(d => <PersonalData key={d.id} name={d.name} surname={d.surname}\r\n        position={d.position} email={d.email} telephon={d.telephon} />);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <ProfileStatus status={state.statusShow.status}\r\n                    statusText={props.statusText} updateStatusText={props.updateStatusText} />\r\n            </div>\r\n            <div><img src={userPhoto} className={style.avatat} alt=\"\" /></div>\r\n            <div> {profileElements} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","const SET_PROFILE = 'SET_PROFILE';\r\nconst STATUS = 'STATUS';\r\nconst STATUS_TEXT = 'STATUS_TEXT';\r\n\r\nlet initialState = {\r\n    personalData: [\r\n        {\r\n            id: '1', name: 'Антон', surname: 'Ахмадеев', position: 'Frontend-developer',\r\n            email: 'loonyp2010@gmail.com', telephon: '+79193639610'\r\n        }\r\n    ],\r\n    statusShow: { status: 'online'},\r\n    statusText: \"Status Text\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE: {\r\n            return {\r\n                ...state,\r\n                personalData: [...state.personalData],\r\n            }\r\n        }\r\n        case STATUS: {\r\n            return {\r\n                ...state,\r\n                statusShow: {...state.statusShow}\r\n            }\r\n        }\r\n        case STATUS_TEXT: {\r\n            return {\r\n                ...state,\r\n                statusText: action.statusText\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const showProfile = (personalData) => ({type: SET_PROFILE, personalData})\r\nexport const showStatus = (status) => ({type: STATUS, status})\r\nexport const setStatusText = (statusText) => ({ type: STATUS_TEXT, statusText})\r\n\r\n\r\n\r\nexport default profileReducer;","import { connect } from \"react-redux\"\r\nimport Profile from \"./Profile\";\r\nimport {setStatusText} from '../../redux/profile-reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileData: state.profileData,\r\n        statusText: state.profileData.statusText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateStatusText: (statusText) => {\r\n            dispatch(setStatusText(statusText));\r\n        }\r\n    }\r\n}\r\n\r\nconst ProfileContainer = connect(mapStateToProps, mapDispatchToProps) (Profile);\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport style from './MenuBlock.module.css'\r\nimport ProfileContainer from '../Profile/ProfileContainer';\r\n\r\nconst MenuBlock = () => {\r\n    return (\r\n        <div className={style.menuBlock} >\r\n            <ProfileContainer />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MenuBlock;","import React from 'react';\r\nimport style from './HeadersUsers.module.css';\r\n\r\nconst HeadersUsers = () => {\r\n    return (\r\n        <div className={style.headersLineUsers}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeadersUsers;","import React from 'react';\r\nimport style from './AddMessgaeChat.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst AddMessgaeChat = (props) => {\r\n\r\n    return (\r\n            <div className={style.inputMessage} >\r\n                <form onSubmit={props.handleSubmit} >\r\n                    <Field component={\"textarea\"} name={\"newTextMessage\"} className={style.inputText} />\r\n                    <button className={style.buttonInput}>></button>\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'message'})(AddMessgaeChat)","import React from 'react';\r\n//import s from './Message.module.css';\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport style from './InputFloodChat.module.css';\r\nimport AddMessgaeChat from './AddMessagesChat/AddMessgaeChat';\r\nimport Messages from '../Messages';\r\n\r\nconst MessageFloodChat = (props) => {\r\n\r\n    let state = props.floodChatData;\r\n\r\n    let windowMessagesElements = state.windowMessage.map(m => <Messages key={m.id} message={m.message} />)\r\n\r\n    let onAddMessage = (values) => {\r\n        props.addMessage(values.newTextMessage)\r\n    }\r\n\r\n    let onDeleteMessage = (values) => {\r\n        props.deleteMessage(values.newTextMessage)\r\n    }\r\n\r\n    let onUpdateInput = (values) => {\r\n        props.updateInput(values.newTextMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={style.inputBlock}>\r\n            <div className={style.showMessage} >\r\n                <span className={style.messageElements}> {state.myMessageMarker.workingChat}\r\n                    {state.myMessageMarker.name} </span>\r\n                <span className={style.messageElementsTwo} > {windowMessagesElements} </span>\r\n                <span className={style.messageElementsThree} > <button onClick={onDeleteMessage}>Отчистить</button> </span>\r\n            </div>\r\n            <AddMessgaeChat onSubmit={onAddMessage} onChange={onUpdateInput} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageFloodChat;","const ADD_TEXT_MESSAGE = 'ADD_TEXT_MESSAGE';\r\nconst MY_MESSAGE_MARKER = 'MY_MESSAGE_MARKER';\r\nconst DELETE_MESSAGE = 'DELETE_MESSAGE';\r\nconst UPDATE_INPUT = 'UPDATE_INPUT';\r\n\r\nlet initialState = {\r\n    windowMessage: [{ message: '' }],\r\n    myMessageMarker: { workingChat: \"[Флуд чат] - \", name: 'Антон: ' },\r\n};\r\n\r\nconst floodChatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TEXT_MESSAGE: {\r\n            let newMessage = action.newTextMessage;\r\n            return {\r\n                ...state,\r\n                windowMessage: [...state.windowMessage, { message: newMessage }]\r\n            }\r\n        }\r\n        case MY_MESSAGE_MARKER: {\r\n            return {\r\n                ...state,\r\n                myMessageMarker: { ...state.myMessageMarker },\r\n            }\r\n        }\r\n        case DELETE_MESSAGE: {\r\n            return {\r\n                ...state, \r\n                windowMessage: state.windowMessage.filter(m => m.id !== action.newTextMessage)\r\n            }\r\n        }\r\n        case UPDATE_INPUT: {\r\n            return {\r\n                ...state,\r\n                newTextMessage: null\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const floodChatCreator = (newTextMessage) => ({ type: ADD_TEXT_MESSAGE, newTextMessage });\r\nexport const deleteMessageCreator = (newTextMessage) => ({ type: DELETE_MESSAGE, newTextMessage});\r\nexport const updateInputCreator = (newTextMessage) => ({ type: UPDATE_INPUT, newTextMessage });\r\n\r\nexport default floodChatReducer;","import { connect } from \"react-redux\";\r\nimport InputFloodChat from \"./InputFloodChat\";\r\nimport { floodChatCreator, deleteMessageCreator, updateInputCreator } from \"../../../redux/floodChat-reduser\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        floodChatData: state.floodChatData\r\n    }\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newTextMessage) => {\r\n            dispatch(floodChatCreator(newTextMessage));\r\n        },\r\n        deleteMessage: (newTextMessage) => {\r\n            dispatch(deleteMessageCreator(newTextMessage));\r\n        },\r\n        updateInput: (newTextMessage) => {\r\n            dispatch(updateInputCreator(newTextMessage));\r\n        }\r\n    }\r\n }\r\n\r\n\r\n\r\nconst FloodChatContainer = connect(mapStateToProps, mapDispatchToProps) (InputFloodChat);\r\n\r\nexport default FloodChatContainer;","import React from 'react';\r\nimport style from './AddMessageChateTwo.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst AddMessageChateTwo = (props) => {\r\n\r\n    return (\r\n            <div className={style.inputMessage} >\r\n                <form onSubmit={props.handleSubmit} >\r\n                    <Field component={\"textarea\"} name={\"newTextMessageTwo\"} className={style.inputText} />\r\n                    <button className={style.buttonInput}>></button>\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'messageWorking'})(AddMessageChateTwo)","import React from 'react';\r\nimport style from './InputWorkingChat.module.css';\r\nimport AddMessageChateTwo from './AddMessageChateTwo/AddMessageChateTwo';\r\nimport Messages from '../Messages';\r\n\r\n\r\nconst InputWorkingChat = (props) => {\r\n\r\n    let state = props.workingChatData;\r\n\r\n    let windowMessagesElements = state.windowMessage.map(m => <Messages key={m.id} message={m.message} />)\r\n\r\n    let onAddMessage = (values) => {\r\n        props.addMessage(values.newTextMessageTwo)\r\n    }\r\n\r\n    let onDeleteMessage = (values) => {\r\n        props.deleteMessage(values.newTextMessageTwo)\r\n    }\r\n\r\n    let onUpdateInput = (values) => {\r\n        props.updateInput(values.newTextMessageTwo)\r\n    }\r\n\r\n    return (\r\n        <div className={style.inputBlock}>\r\n            <div className={style.showMessage} >\r\n                <span className={style.messageElements}> {state.myMessageMarker.workingChat}\r\n                    {state.myMessageMarker.name} </span>\r\n                <span className={style.messageElementsTwo} > {windowMessagesElements} </span>\r\n                <span className={style.messageElementsThree} > <button onClick={onDeleteMessage}>Отчистить</button> </span>\r\n            </div>\r\n            <AddMessageChateTwo onSubmit={onAddMessage} onChange={onUpdateInput} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputWorkingChat;","const ADD_TEXT_MESSAGE = 'ADD_TEXT_MESSAGE';\r\nconst MY_MESSAGE_MARKER = 'MY_MESSAGE_MARKER';\r\nconst DELETE_MESSAGE = 'DELETE_MESSAGE';\r\nconst UPDATE_INPUT = 'UPDATE_INPUT';\r\n\r\nlet initialState = {\r\n    windowMessage: [{ message: '' }],\r\n    myMessageMarker: { workingChat: \"[Рабочий чат] - \", name: 'Антон: ' },\r\n};\r\n\r\nconst workingChatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TEXT_MESSAGE: {\r\n            let newMessage = action.newTextMessageTwo;\r\n            return {\r\n                ...state,\r\n                windowMessage: [...state.windowMessage, { message: newMessage }]\r\n            }\r\n        }\r\n        case MY_MESSAGE_MARKER: {\r\n            return {\r\n                ...state,\r\n                myMessageMarker: { ...state.myMessageMarker },\r\n            }\r\n        }\r\n        case DELETE_MESSAGE: {\r\n            return {\r\n                ...state, \r\n                windowMessage: state.windowMessage.filter(m => m.id !== action.newTextMessageTwo)\r\n            }\r\n        }\r\n        case UPDATE_INPUT: {\r\n            return {\r\n                ...state,\r\n                newTextMessageTwo: \"\"\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const workingChatCreator = (newTextMessageTwo) => ({ type: ADD_TEXT_MESSAGE, newTextMessageTwo });\r\nexport const deleteMessageCreator = (newTextMessageTwo) => ({ type: DELETE_MESSAGE, newTextMessageTwo});\r\nexport const updateInputCreator = (newTextMessageTwo) => ({ type: UPDATE_INPUT, newTextMessageTwo });\r\n\r\nexport default workingChatReducer;","import { connect } from \"react-redux\";\r\nimport InputWorkingChat from \"./InputWorkingChat\";\r\nimport { workingChatCreator, deleteMessageCreator, updateInputCreator } from \"../../../redux/workingChat-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        workingChatData: state.workingChatData\r\n    }\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newTextMessageTwo) => {\r\n            dispatch(workingChatCreator(newTextMessageTwo));\r\n        },\r\n        deleteMessage: (newTextMessageTwo) => {\r\n            dispatch(deleteMessageCreator(newTextMessageTwo));\r\n        },\r\n        updateInput: (newTextMessageTwo) => {\r\n            dispatch(updateInputCreator(newTextMessageTwo));\r\n        }\r\n    }\r\n }\r\n\r\n\r\n\r\nconst WorkingChatContainer = connect(mapStateToProps, mapDispatchToProps) (InputWorkingChat);\r\n\r\nexport default WorkingChatContainer;","import React from 'react';\r\nimport style from \"./UsersItem.module.css\"\r\n\r\nconst UsersItem = (props) => {\r\n    return (\r\n        <div className={style.nameDessign} >\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersItem;","import React from 'react';\r\nimport UsersItem from \"./UsersItem\";\r\nimport style from \"./Users.module.css\"\r\n\r\nconst Users = (props) => {\r\n\r\n    let state = props.usersData;\r\n\r\n    let usersElements = state.users.map(u => <UsersItem key={u.id} name={u.name} />);\r\n\r\n    return (\r\n        <div className={style.usersBlock}>\r\n            <span className={style.userFont}>\r\n                {usersElements}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { connect } from \"react-redux\"\r\nimport Users from \"./Users\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersData: state.usersData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, ) (Users);","import React from 'react';\nimport './App.css';\nimport MenuBlock from './components/MenuBlock/MenuBlock';\nimport HeadersUsers from './components/Headers/HeadersUsers';\nimport FloodChatContainer from './components/Chats/FloodChat/FloodChatContainer';\nimport WorkingChatContainer from './components/Chats/WorkingChat/WorkingChatContainer';\nimport UsersContainer from './components/Users/UsersContainer';\n\n\nconst App = () => {\n\n  return (\n    <div className='app-wrapper'>\n      <div className='app-wrapper-content'>\n        <MenuBlock />\n        <HeadersUsers />\n        <FloodChatContainer />\n        <WorkingChatContainer />\n        <UsersContainer />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {\r\n    users: [\r\n        {id: 1, name: 'Дима'},\r\n        {id: 2, name: 'Катя'},\r\n        {id: 3, name: 'Маша'},\r\n        {id: 4, name: 'Леша'},\r\n        {id: 5, name: 'Лера'},\r\n        {id: 6, name: 'Олег'},\r\n        {id: 7, name: 'Слава'},\r\n        {id: 8, name: 'Саша'},\r\n        {id: 9, name: 'Гера'},\r\n        {id: 10, name: 'Оля'},\r\n        {id: 12, name: 'Ксения'},\r\n        {id: 13, name: 'Женя'},\r\n        {id: 14, name: 'Денис'},\r\n    ]\r\n};\r\n\r\nconst usersRedusers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            let futureObject = action.futureAction;\r\n            return {\r\n                ...state,\r\n                users: [...state.users, futureObject]\r\n            }\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actionUsersCreator = (futureAction) => ({type: SET_USERS, futureAction});\r\n\r\nexport default usersRedusers;","import { createStore, combineReducers,  } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport floodChatReducer from \"./floodChat-reduser\";\r\nimport workingChatReducer from \"./workingChat-reducer\";\r\nimport usersRedusers from \"./users-redusers\";\r\n\r\nlet reducers = combineReducers({\r\n    profileData: profileReducer,\r\n    floodChatData: floodChatReducer,\r\n    workingChatData: workingChatReducer,\r\n    usersData: usersRedusers,\r\n    form: formReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nlet renderEntireTree = () => {\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('root')\n);\n}\n\nrenderEntireTree();\n\nstore.subscribe(() => {\n  renderEntireTree();\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockInfoUser\":\"PersonalData_blockInfoUser__3l9HQ\",\"markName\":\"PersonalData_markName__2YNGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"InputFloodChat_inputBlock__3FOoB\",\"showMessage\":\"InputFloodChat_showMessage__2_3rK\",\"messageElements\":\"InputFloodChat_messageElements__YlWAl\",\"messageElementsTwo\":\"InputFloodChat_messageElementsTwo__RxnUz\",\"messageElementsThree\":\"InputFloodChat_messageElementsThree__260A2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"InputWorkingChat_inputBlock__3WUOG\",\"showMessage\":\"InputWorkingChat_showMessage__HUbau\",\"messageElements\":\"InputWorkingChat_messageElements__3rk3J\",\"messageElementsTwo\":\"InputWorkingChat_messageElementsTwo__shPD2\",\"messageElementsThree\":\"InputWorkingChat_messageElementsThree__1vqFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileStatus_statusBlock__2Tkmo\",\"statusDesign\":\"ProfileStatus_statusDesign__DYs8E\",\"statusInput\":\"ProfileStatus_statusInput__2HS-Y\",\"statusInputDown\":\"ProfileStatus_statusInputDown__1vAtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputMessage\":\"AddMessgaeChat_inputMessage__Swv7d\",\"inputText\":\"AddMessgaeChat_inputText__1Kzyx\",\"buttonInput\":\"AddMessgaeChat_buttonInput__WFqSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputMessage\":\"AddMessageChateTwo_inputMessage__Lhbw3\",\"inputText\":\"AddMessageChateTwo_inputText__FbFyL\",\"buttonInput\":\"AddMessageChateTwo_buttonInput__2Jxgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__2Vdo3\",\"userFont\":\"Users_userFont__1tHBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuBlock\":\"MenuBlock_menuBlock__1xxKq\"};","module.exports = __webpack_public_path__ + \"static/media/user.8d9753dd.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatat\":\"Profile_avatat__j7uKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headersLineUsers\":\"HeadersUsers_headersLineUsers__2mGlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameDessign\":\"UsersItem_nameDessign__ypGod\"};"],"sourceRoot":""}